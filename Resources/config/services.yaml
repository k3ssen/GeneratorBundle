# TODO: define aliased services explicitly, see: http://symfony.com/doc/current/bundles/best_practices.html#services

parameters:
    # The default_attributes to be used as MetaAttribute objects for MetaProperties.
    # With the 'generator.attributes' config, these attributes can be extended and/or partially overridden:
    # The names and types cannot be altered. Also, meta_properties can be added, but not removed.
    default_attributes:
        name:
            type: 'string'
            meta_properties: ['K3ssen\GeneratorBundle\MetaData\Property\MetaPropertyInterface']
            question: null
        id:
            type: 'bool'
            meta_properties: ['K3ssen\GeneratorBundle\MetaData\Property\PrimitiveMetaPropertyInterface']
            default: false
            # Only ask id if an id hasn't been assigned already
            requirement_expression: 'metaEntity.getIdProperty() === null or metaEntity.getIdProperty() === metaProperty'
        unique:
            type: 'bool'
            meta_properties: ['K3ssen\GeneratorBundle\MetaData\Property\PrimitiveMetaPropertyInterface']
            default: false
            # Unique should not be asked if the property is the id property, since id already requires to be unique
            requirement_expression: 'metaEntity.getIdProperty() !== metaProperty'
        nullable:
            type: 'bool'
            meta_properties: ['K3ssen\GeneratorBundle\MetaData\Property\MetaPropertyInterface']
            default: false
            # Nullable should not be asked if the property is the id property: id cannot be null
            requirement_expression: 'metaEntity.getIdProperty() !== metaProperty'
        length:
            type: 'int'
            meta_properties: ['K3ssen\GeneratorBundle\MetaData\Property\HasLengthInterface']
        precision:
            type: 'int'
            meta_properties: ['K3ssen\GeneratorBundle\MetaData\Property\DecimalMetaPropertyInterface']
        scale:
            type: 'int'
            meta_properties: ['K3ssen\GeneratorBundle\MetaData\Property\DecimalMetaPropertyInterface']
        targetEntity:
            type: 'object'
            meta_properties: ['K3ssen\GeneratorBundle\MetaData\Property\RelationMetaPropertyInterface']
            question: 'K3ssen\GeneratorBundle\Command\AttributeQuestion\TargetEntityQuestion'
        orphanRemoval:
            type: 'bool'
            meta_properties:
                - 'K3ssen\GeneratorBundle\MetaData\Property\ManyToManyMetaPropertyInterface'
                - 'K3ssen\GeneratorBundle\MetaData\Property\OneToManyMetaPropertyInterface'
            default: false
        inversedBy:
            type: 'string'
            meta_properties:
                - 'K3ssen\GeneratorBundle\MetaData\Property\ManyToOneMetaPropertyInterface'
                - 'K3ssen\GeneratorBundle\MetaData\Property\OneToOneMetaPropertyInterface'
                - 'K3ssen\GeneratorBundle\MetaData\Property\ManyToManyMetaPropertyInterface'
            requirement_expression: 'metaProperty.getMappedBy() === null'
        mappedBy:
            type: 'string'
            meta_properties:
                - 'K3ssen\GeneratorBundle\MetaData\Property\OneToManyMetaPropertyInterface'
                - 'K3ssen\GeneratorBundle\MetaData\Property\OneToOneMetaPropertyInterface'
                - 'K3ssen\GeneratorBundle\MetaData\Property\ManyToManyMetaPropertyInterface'
            requirement_expression: 'metaProperty.getInversedBy() === null'

    # Can be overridden and extended in 'generator.trait_options'
    default_trait_options:
        SoftDeleteable:
            ask: true
            default: false
            namespace: 'Gedmo\SoftDeleteable\Traits\SoftDeleteableEntity'
            namespace_alias: 'SoftDeleteable'
            interface_namespace: null
            interface_alias: null
        Timestampable:
            ask: true
            default: true
            namespace: 'Gedmo\Timestampable\Traits\TimestampableEntity'
            namespace_alias: 'Timestampable'
            interface_namespace: null
            interface_alias: null
        Blameable:
            ask: true
            default: true
            namespace: 'Gedmo\Blameable\Traits\BlameableEntity'
            namespace_alias: 'Blameable'
            interface_namespace: null
            interface_alias: null

services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false
        bind:
            $attributes: '%generator.attributes%'
            $useCustomRepository: true #'%entity_generator.use_custom_repository%' //TODO: make configurable
            $bundlesMetaData: '%kernel.bundles_metadata%'
            $entityQuestions: !tagged generator.entity_question
            $propertyQuestions: !tagged generator.property_question
            $attributeQuestions: !tagged generator.attribute_question
            $projectDir: '%kernel.project_dir%'
            $defaultBundle: '%generator.default_bundle%'
            $askBundle: '%generator.ask_bundle%'
            $askTraits: '%generator.ask_traits%'
            $askUseVoter: '%generator.ask_use_voter%'
            $useVoterDefault: '%generator.use_voter_default%'
            $askUseWriteActions: '%generator.ask_use_write_actions%'
            $useWriteActionsDefault: '%generator.use_write_actions_default%'
            $defaultEntitySubdirectory: '%generator.default_entity_subdirectory%'
            $askEntitySubdirectory: '%generator.ask_entity_subdirectory%'
            $controllerSubdirectoryDefault: '%generator.controller_subdirectory_default%'
            $askControllerSubdirectory: '%generator.ask_controller_subdirectory%'
            $askDisplayField: '%generator.ask_display_field%'
            $traitOptions: '%generator.trait_options%'

    K3ssen\GeneratorBundle\:
        resource: '../../*'
        exclude: '../../{Entity,Migrations,Tests}'